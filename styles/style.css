@import url(./fonts.css);
@import url(./normalize.css);
@import url(./reset.css);

/* 숨김 콘텐츠 -무조건 숨길거야~ */
.a11y-hidden, legend{
  position: absolute;
  width: 1px;
  height: 1px;
  /* margin: -1px; */
  overflow: hidden;
  /* clip: react(0 0 0 0); */
  clip-path: polygon(0 0, 0 0, 0 0);
}

/* 기본 스타일 */
*, *::before, *::after{
  box-sizing: border-box;
}

html{
  font-size: 10px;
}

/* 링크스타일 */
a{
  color: inherit;
  text-decoration: none;
}

/* 본문스타일 */
body {
  /* em, rem 단위로 사용해보기 */
  color: #212121;
  font-size: 1.4rem;
  font-family: "Pretendard Variable", Pretendard, -apple-system, BlinkMacSystemFont, 
  system-ui, Roboto, "Helvetica Neue", "Segoe UI", "Apple SD Gothic Neo", "Noto Sans KR", 
  "Malgun Gothic", "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", sans-serif;
  /* background-color: #ccc;
  background-image: url("./images/bg_flower.png"),
  linear-gradient
  (to bottom, #ccc 0%, #eee 35%, #fff 70%, #fff 100%);
  background-repeat: no-repeat, repeat;
  background-position: 50% 0, 0 0; */
  /* 배경이미지를 하나가 아니라 여러개 선언할 때 단축표기법에서는 배경색상을 맨 마지막 배경이미지 앞에 명시해야 함 */
  background: url("./images/bg_flower.png") no-repeat 50% 0,
  #ccc linear-gradient(to bottom, #ccc 0%, #eee 35%, #fff 70%, #fff 100%) repeat 0 0;
}

/* 레이아웃 */
.header, .visual, .main, .slogan, .footer-inner{
  width: 940px;
  margin: 0 auto;
}
/* 헤더 */
.header{
  background: #fff;
  padding: 0 30px;
  border-radius: 0 0 15px 15px;
  position: relative;
}


/* 로고 */
.logo{
  position: absolute;
  top: 45px;
  left: 60px;
  /* static이 아닌 포지션에서 z-index를 쓸 수 있음
  static은 떠있지 않기 때문*/
  z-index: 10; 
}

/* 텍스트 링크 모음 */
.member{
  text-align: right;
  padding: 4px 0;
  /* position 속성을 활용하여 .member 영역을 오른쪽으로 10px 만큼 이동하기 */
  /* position: relative;
  right: -10px;*/
  /* transform 속성을 활용하여 .member 영역을 오른쪽으로 10px 만큼 이동하기 */
  transform: translate(10px);
}
 

.member li{
  display: inline-block;
}

.member a{
  padding: 6px 10px;
  display: inherit;
  text-transform: uppercase;
}

/* 마지막 li 요소에 포함된 a 요소를 선택하여 오른쪽 padding 값을 0으로 재정의 하는 방법 */
/* .member li:last-child a{
  padding-right: 0;
} */

.divider{
  margin-right: 4px;
}

/* 메인메뉴 */
.navigation {
  padding-bottom: 40px;
}

.menu {
  border-top: 2px solid #212121;
  background: #e85e2c
  linear-gradient(
  to bottom,
  #ef9126 0%,
  #e85e2c 35%,
  #e85e2c 70%,
  #ef9126 100%);
  border-radius: 0 0 5px 5px;
  /* height 값을 추가함으로써 없애도됌 */
  /* display: flow-root; */
  padding-left: 230px;
  height: 47px;
  position: relative;
}

.menu > li:nth-child(-n + 3) {
  position: relative;
}

/* menu안에 있는 모든 li들이(+sub) float됌 */
/* .menu li {
  float: left;
} */

/* positon은 자식요소에 relative주려고 */
.menu-item {
  /* position: relative; */
  float: left;
  border-left: 2px solid #fff;
}
/* 구체성 점수->10점 */
.menu-button {
  border: 0;
  background: transparent;
  padding: 0 23px;
  line-height: 45px;
  font-size: 15px;
  font-weight: 700;
  color: #fff;
  /* text-shadow는 텍스트 아웃라인 주려고 */
  text-shadow: 1px 0px 0 #000, 0px 1px 0 #000;
}

/* 한칸 띄운거는 포함되어 있다는 뜻
  구체성 점수->20점 */
.is-active .menu-button { 
  color: #ff0;
}

/* line-height를 줌으로써 딱맞게 맞춰서 만들 수 있는 것 
  padding보다는 line-height를 쓰는게 편리
  (애초에 부모의 패딩값이 같기때문에 똑같은 라인으로 있는 것
  before나 after 둘다 inline으로 만들어짐
  before는 글자 앞에 생기기 때문에 after를 사용해야하는 것*/
.is-active .menu-button::after {
  content: "";
  display: block;
  border-top: 2px solid #000;
}

.sub-menu {
  /* 포지션으로 떠있게해줌으로써 메뉴 아이템에 영향을 안줌 */
  position: absolute;
  top: 47px;
  /* 임시로 숨김 */
  padding: 4px 0;
  display: none;
}

.menu-html, .menu-css, .menu-standards { 
  left: 0;
}
.menu-accessibility, 
.menu-qna, 
.menu-archive {
  right: 0;
}

/* none후에 꼭 block으로 안보여줘도 됌
  white-space=>공백 =>줄바꿈하지 않게해줌 */
.is-active .sub-menu {
  display: block;
  white-space: nowrap;
}

/* block상자는 block단위로
  inline상자는 콘텐츠 단위로 줄바꿈 -공간이 충분하지 않으면
  width가 auto면 부모영역을 상속받음 */
.sub-menu li {
  display: inline-block;
  /* padding-left: 1em; */
}

/* is-active를 지금은 안붙여도됌 DOM-제어 */
.sub-menu a::before {
  content: "\e805";
  font-family: 'fontello';
  font-weight: normal;
  display: inline-block;
  text-decoration: inherit;
  width: 1em;
  margin-right: .2em;
  text-align: center;
  font-variant: normal;
  text-transform: none;
  line-height: 1em;
  margin-left: .2em;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* css는 이벤트가 안됌. css는 focus, hover 둘 다 선택될 수 있음 */
.sub-menu a:hover::before, 
.sub-menu a:focus::before {
  content: "\e801";
}

/* 부모인 inline이랑 겹치면(a는 부모에게 상속받아 기본 inline) 문제가 생기기때문에 block으로 설정하지말고
  inline-block이나 inline으로 해야함. inline-block을 써야 흐름은 가로로
  그리고 block처럼 유지 
  아웃라인 설정시 위의 구분선이랑 겹치기때문에 padding값을 10->6px으로 바꾸고 sub-menu의 padding 값도 조절*/
.sub-menu a {
  display: inline-block;
  padding: 6px 0;
}

/*sub-menu의 a에 마우스 hover하거나 focus했을때 글자 색 바뀌게 */
.sub-menu a:hover,
.sub-menu a:focus {
  color: #f00;
}

/* 비주얼 */
/* @는 무언가를 선언하는 것 / at sign rule 
  padding이나 margin은 reflow를 유발함 */
@keyframes moveEffect{
  0%{
    font-size: 12px;
    color: rgba(0,0,0,0.2);
    /* color: hsla(0, 0%, 0%, 0); */
    transform: translate(0,0);
  }
  100%{
    font-size: 24px;
    color: rgba(0,0,0,1);
    /* color: hsla(0, 0%, 0%, 1); */
    transform: translate(400px, 75px);
  }
}

@keyframes fadeEffect{
  0%{
    opacity: 1;
  }
  100%{
    opacity: 0;
  }
}

/* 광고영역 등 height 고정값을 써야하는 부분이 있음. */
.visual{
  height: 120px;
  /* before와 after의 기준 - position: relative */
  position: relative;
}

/* mark up에서 div를 만들지 않기위해 before, after를 만든것*/
.visual::before, 
.visual::after{
  content: "";
  position: absolute; 
  /* 부모와 똑같이 겹쳐놓게 하기위해 준 value */
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  /* name duration은 무조건 앞에 선언! */
  animation: fadeEffect 2000ms infinite alternate;
}

.visual::before {
  /* 이미지 자를때 여백이 없는게 좋음 - 이미지가 잘릴 수도 있음. 
  투명한 셀로판지를 붙인 느낌*/
  /* background-image: url(./images/ani_flower_01.png), url(./images/ani_flower_02.png);
  background-repeat: no-repeat;
  background-position: 0 -10px, 600px 0; */
  background: 
  url(./images/ani_flower_01.png) no-repeat 0 -10px,  
  url(./images/ani_flower_02.png) no-repeat 600px 0;
}
.visual::after {
  /* background-color: pink; */
  background: 
  url(./images/ani_flower_03.png) no-repeat 300px 0,  
  url(./images/ani_flower_04.png) no-repeat 800px 0;
  animation-delay: 1000ms;
}

/* [fadeEffect-flower animation] 
  투명도(opacity:color는 글자는 되지만 상자는 안됌)-key frames 선언, ::before/::after가 교차하면서 재생,
  무한반복(infinite) */

.visual-text{
  font-family: Georgia, 'Times New Roman', Times, serif;
  /* animation 끝난 상태로 채울 때 -animation-fill-mode: forwards; */
  /* background-color를 넣었을때 상자가 밖으로 튀어나가기때문에 display: inline-block 값을 주는 것
  position: absolute;로 띄워놔둬됌 -하지만 그럴경우 position: relative;를 [.visual]에 넣어놔야함.
  overflow: hidden을 줄 경우 디자인에 제한이 생기기때문에 사용 지양 -문제 유발 가능성 */
  /* display: inline-block; 은 텍스트가 after로 가려지기 때문에 position: relative를 쓴 것
  (absolute를 써도 되지만 여기서는 relative)*/
  animation: moveEffect 400ms ease-in-out forwards;
  position: relative;
  z-index: 1;
}

/* 메인 */
.main{
  display: flow-root;
  background: #fff;
  min-height:450px;
  padding: 30px 15px;
  border-radius: 15px 15px 0 0;
}
.group{
  margin: 0 15px;
  float: left;
}

.group1{
  width: 250px;
}
.group2{
  background-color: salmon;
  background-image: ;
  width: 380px;
}
.group3{
  background-color: gold;
  width: 190px;
}
/* 로그인 영역 */
/* gradient는 모던 브라우저에서 적용되는 */
.login {
  box-shadow: 5px 5px 0 0 #ccc;
  background: 
  orange 
  radial-gradient(circle at right top, orange, orangered);
  padding: 10px;
  border-radius: 5px;
}

.login-title {
  color: #ff0;
  font-size: 15px;
  /* regular 400 bold 700 reset으로 h2의 볼드속성이 지워진 상태이기 때문에 weight를 다시 준 것 */
  font-weight: 700;
  /* text 들여쓰기 1em은 15px만큼 들여쓰기 되는것 */
  text-indent: 10px;
}

.login-form {
  background-color: #fff;
  margin-top: 10px;
  border-radius: 5px 5px 0 0;
  padding: 10px 10px 0 10px;
}

.login-form fieldset {
  position: relative;
  border-bottom: 1px solid #aaa;
  padding-bottom: 5px;
}

.user-email, .user-pw {
  margin-bottom: 5px;
}


/* label은 원래 inline (inline은 원래 width를 줄 수 없음 
  input은 inline-block */
.login-form label {
  display: inline-block;
  width: 4em;
}

.login-form input {
  width: 90px;
  height: 24px;
  border: 1px solid #aaa;
  padding: 1px 1px 1px 5px;
  border-radius: 3px;
}


.login-button { 
  position: absolute; 
  top: 0;
  right: 0;
  height: 53px;
  background-color: orangered;
  color: #fff;
  border: 0;
  padding: 0 8px;
  border-radius: 3px;
  font-size: 13px;
}

/* flex 쓸때 row nowrap (row 방향으로 갈거야) 같이 써주는게 봤을때 이해하기 좋음 */
/* 왜 sign에 패딩 탑을 다 주면 안되는지... */
.sign {
  background-color: #fff;
  border-radius: 0 0 5px 5px;
  padding: 4px 10px;
  /* 공백 문자를 없애기 위해 font-size:0;으로 한 것 */
  font-size: 0;
  /* display: flex;
  flex-flow: row nowrap;
  justify-content: space-between; */
}

.sign li { 
  font-size: 14px;
  display: inline-block;
}

.sign li:first-child {
  width: 35%;
}

/* text-align은 블럭요소에서만 움직임 -부모의 박스에 맞춰서 */
.sign li:last-child {
  width: 65%;
  text-align: right;
}

.sign a {
  display: inline-block;
  padding: 6px 0;
  /* letter-spacing은 자간 */
  letter-spacing: -1px;
}

.sign a::before {
  content: '\e804';
  font-family: 'fontello';
  margin-right: 8px;
  color: orangered;
}

/* 유효성 검사 배너 */
.validation-list {
  margin-top: 25px;
}

/* 마진 병합 - 첫번째 영역에 margin-top이 있어도 겹쳐져서 margin이 먹지 않은 것 처럼 보임.
  등간격 배치를 위해 / padding은 겹치지 않지만 margin은 겹침 -normal flow 일 때 -flex는 병합 안됌.
  부모의 25px에 10px가 포함된 것. / 그러나 padding이나 border로 경계(선을 그어줄수)를 줄 수 있음. -부모에게 */
.validation-list li {
  margin-top: 10px;
}

.validation-list a {
  display: block;
  background:url(./images/validation_icon.png) no-repeat 25px 50%, 
  #ccc linear-gradient(to bottom, #ccc, #eee);
  padding: 8px 50px;
  border-radius: 30px;
  border: 1px solid #aaa;
}

.validation-list a:hover,
.validation-list a:focus {
  color: #f00;
}
/* .validation-list a::before {
  content: url(./images/validation_icon.png);
  vertical-align은 인라인 박스가 가질수 있음
  vertical-align: middle;
} */

/* 슬로건 */
.slogan{
  background: skyblue;
  height: 10vh;
  clear: both;
}
/* 푸터 */
.footer{
  background: #ccc 
  linear-gradient(
    to top, #ccc 0%, #eee 35%, #fff 70%, #fff 100%);
}
.footer-inner{
  background: lightgrey;
  height: 15vh;
}