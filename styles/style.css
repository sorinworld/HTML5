@import url(./fonts.css);
@import url(./normalize.css);
@import url(./reset.css);

/* 숨김 콘텐츠 */
.a11y-hidden{
  position: absolute;
  width: 1px;
  height: 1px;
  /* margin: -1px; */
  overflow: hidden;
  /* clip: react(0 0 0 0); */
  clip-path: polygon(0 0, 0 0, 0 0);
}

/* 기본 스타일 */
*, *::before, *::after{
  box-sizing: border-box;
}

html{
  font-size: 10px;
}

/* 링크스타일 */
a{
  color: inherit;
  text-decoration: none;
}

/* 본문스타일 */
body {
  /* em, rem 단위로 사용해보기 */
  font-size: 1.4rem;
  color: #212121;
  background: #ccc 
  linear-gradient(
    to bottom, #ccc 0%, #eee 35%, #fff 70%, #fff 100%);
  font-family: "Pretendard Variable", Pretendard, -apple-system, BlinkMacSystemFont, 
  system-ui, Roboto, "Helvetica Neue", "Segoe UI", "Apple SD Gothic Neo", "Noto Sans KR", 
  "Malgun Gothic", "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", sans-serif;
}
/* 레이아웃 */
.header, .visual, .main, .slogan, .footer-inner{
  width: 940px;
  margin: 0 auto;
}
/* 헤더 */
.header{
  background: #fff;
  padding: 0 30px;
  border-radius: 0 0 15px 15px;
  position: relative;
}


/* 로고 */
.logo{
  position: absolute;
  top: 45px;
  left: 60px;
  /* static이 아닌 포지션에서 z-index를 쓸 수 있음
  static은 떠있지 않기 때문*/
  z-index: 10; 
}

/* 텍스트 링크 모음 */
.member{
  text-align: right;
  padding: 4px 0;
  /* position 속성을 활용하여 .member 영역을 오른쪽으로 10px 만큼 이동하기 */
  /* position: relative;
  right: -10px;*/
  /* transform 속성을 활용하여 .member 영역을 오른쪽으로 10px 만큼 이동하기 */
  transform: translate(10px);
}
 

.member li{
  /* background-color: pink; */
  display: inline-block;
}

.member a{
  padding: 6px 10px;
  display: inherit;
  text-transform: uppercase;
}

/* 마지막 li 요소에 포함된 a 요소를 선택ㅎ사여 오른쪽 padding 값을 0으로 재정의 하는 방법 */
/* .member li:last-child a{
  padding-right: 0;
} */

.divider{
  margin-right: 4px;
}

/* 메인메뉴 */
.navigation {
  padding-bottom: 40px;
}

.menu {
  border-top: 2px solid #212121;
  background: #e85e2c
  linear-gradient(
  to bottom,
  #ef9126 0%,
  #e85e2c 35%,
  #e85e2c 70%,
  #ef9126 100%);
  border-radius: 0 0 5px 5px;
  /* height 값을 추가함으로써 없애도됌 */
  /* display: flow-root; */
  padding-left: 230px;
  height: 47px;
  position: relative;
}

.menu > li:nth-child(-n + 3) {
  position: relative;
}

/* menu안에 있는 모든 li들이(+sub) float됌 */
/* .menu li {
  float: left;
} */

/* positon은 자식요소에 relative주려고 */
.menu-item {
  /* position: relative; */
  float: left;
  border-left: 2px solid #fff;
}
/* 구체성 점수->10점 */
.menu-button {
  border: 0;
  background: transparent;
  padding: 0 23px;
  line-height: 45px;
  font-size: 15px;
  font-weight: 700;
  color: #fff;
  text-shadow: 1px 0px 0 #000, 0px 1px 0 #000;
}

/* 한칸 띄운거는 포함되어 있다는 뜻
  구체성 점수->20점 */
.is-active .menu-button { 
  color: #ff0;
}

/* line-height를 줌으로써 딱맞게 맞춰서 만들 수 있는 것 
  padding보다는 line-height를 쓰는게 편리
  (애초에 부모의 패딩값이 같기때문에 똑같은 라인으로 있는 것
  before나 after 둘다 inline으로 만들어짐
  before는 글자 앞에 생기기 때문에 after를 사용해야하는 것*/
.is-active .menu-button::after {
  content: "";
  display: block;
  border-top: 2px solid #000;
}

.sub-menu {
  /* 포지션으로 떠있게해줌으로써 메뉴 아이템에 영향을 안줌 */
  position: absolute;
  top: 47px;
  /* 임시로 숨김 */
  padding: 4px 0;
  display: none;
}

.menu-html, .menu-css, .menu-standards { 
  left: 0;
}
.menu-accessibility, 
.menu-qna, 
.menu-archive {
  right: 0;
}

/* none후에 꼭 block으로 안보여줘도 됌
  white-space=>공백 =>줄바꿈하지 않게해줌 */
.is-active .sub-menu {
  display: block;
  white-space: nowrap;
}

/* block상자는 block단위로
  inline상자는 콘텐츠 단위로 줄바꿈 -공간이 충분하지 않으면
  width가 auto면 부모영역을 상속받음 */
.sub-menu li {
  display: inline-block;
  /* padding-left: 1em; */
}

/* is-active를 지금은 안붙여도됌 DOM-제어 */
.sub-menu a::before {
  content: "\e805";
  font-family: 'fontello';
  font-weight: normal;
  display: inline-block;
  text-decoration: inherit;
  width: 1em;
  margin-right: .2em;
  text-align: center;
  font-variant: normal;
  text-transform: none;
  line-height: 1em;
  margin-left: .2em;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* css는 이벤트가 안됌. css는 focus, hover 둘 다 선택될 수 있음 */
.sub-menu a:hover::before, 
.sub-menu a:focus::before {
  content: "\e801";
}

/* 부모인 inline이랑 겹치면(a는 부모에게 상속받아 기본 inline) 문제가 생기기때문에 block으로 설정하지말고
  inline-block이나 inline으로 해야함. inline-block을 써야 흐름은 가로로
  그리고 block처럼 유지 
  아웃라인 설정시 위의 구분선이랑 겹치기때문에 padding값을 10->6px으로 바꾸고 sub-menu의 padding 값도 조절*/
.sub-menu a {
  display: inline-block;
  padding: 6px 0;
}

/*sub-menu의 a에 마우스 hover하거나 focus했을때 글자 색 바뀌게 */
.sub-menu a:hover,
.sub-menu a:focus {
  color: #f00;
}

/* 비주얼 */
.visual{
  background: orange;
  height: 10vh;
}
/* 메인 */
.main{
  background: lightgreen;
  height: 50vh;
  display: flow-root;
  padding: 0 15px;
}
.group{
  margin: 0 15px;
  float: left;
}

.group1{
  background-color: violet;
  width: 250px;
}
.group2{
  background-color: salmon;
  width: 380px;
}
.group3{
  background-color: gold;
  width: 190px;
}

/* 슬로건 */
.slogan{
  background: skyblue;
  height: 10vh;
  clear: both;
}
/* 푸터 */
.footer{
  background: #ccc 
  linear-gradient(
    to top, #ccc 0%, #eee 35%, #fff 70%, #fff 100%);
}
.footer-inner{
  background: lightgrey;
  height: 15vh;
}